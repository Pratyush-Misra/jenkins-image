<?xml version='1.1' encoding='UTF-8'?>
<flow-definition plugin="workflow-job@1268.v6eb_e2ee1a_85a">
  <actions>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5"/>
    <org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction plugin="pipeline-model-definition@2.2118.v31fd5b_9944b_5">
      <jobProperties/>
      <triggers/>
      <parameters/>
      <options/>
    </org.jenkinsci.plugins.pipeline.modeldefinition.actions.DeclarativeJobPropertyTrackerAction>
  </actions>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@3618.v13db_a_21f0fcf">
    <script>pipeline {
    agent any
    tools {
        go &apos;1.20.1&apos;
    }
    
    stages {
        stage(&apos;Checkout&apos;) {
            steps {
                withCredentials([
                    usernamePassword(credentialsId: &apos;git123456&apos;, usernameVariable: &apos;GIT_USERNAME&apos;, passwordVariable: &apos;GIT_PASSWORD&apos;)
                ]) {
                    checkout([$class: &apos;GitSCM&apos;,
                              branches: [[name: &apos;master&apos;]],
                              userRemoteConfigs: [[url: &apos;https://github.com/Pratyush-Misra/helloworld&apos;,
                                                  credentialsId: &apos;git123456&apos;]]])
                }
            }
        }
        
        stage(&apos;Build&apos;) {
            steps {
                sh &apos;go run .&apos;
            }
        }
        
        stage(&apos;Test&apos;) {
            steps {
                sh &apos;go test&apos;
            }
        }
    }
}
</script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>